{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categorias/categorias-cadastro/categorias-cadastro.component.css","webpack:///./src/app/categorias/categorias-cadastro/categorias-cadastro.component.html","webpack:///./src/app/categorias/categorias-cadastro/categorias-cadastro.component.ts","webpack:///./src/app/categorias/categorias-listar/categorias-listar.component.css","webpack:///./src/app/categorias/categorias-listar/categorias-listar.component.html","webpack:///./src/app/categorias/categorias-listar/categorias-listar.component.ts","webpack:///./src/app/conta/cadastro/cadastro.component.css","webpack:///./src/app/conta/cadastro/cadastro.component.html","webpack:///./src/app/conta/cadastro/cadastro.component.ts","webpack:///./src/app/conta/login/login.component.css","webpack:///./src/app/conta/login/login.component.html","webpack:///./src/app/conta/login/login.component.ts","webpack:///./src/app/lancamentos/lancamentos-cadastro/lancamentos-cadastro.component.css","webpack:///./src/app/lancamentos/lancamentos-cadastro/lancamentos-cadastro.component.html","webpack:///./src/app/lancamentos/lancamentos-cadastro/lancamentos-cadastro.component.ts","webpack:///./src/app/lancamentos/lancamentos-listar/lancamentos-listar.component.css","webpack:///./src/app/lancamentos/lancamentos-listar/lancamentos-listar.component.html","webpack:///./src/app/lancamentos/lancamentos-listar/lancamentos-listar.component.ts","webpack:///./src/app/resumo/dashboard/dashboard.component.css","webpack:///./src/app/resumo/dashboard/dashboard.component.html","webpack:///./src/app/resumo/dashboard/dashboard.component.ts","webpack:///./src/app/resumo/relatorio/relatorio.component.css","webpack:///./src/app/resumo/relatorio/relatorio.component.html","webpack:///./src/app/resumo/relatorio/relatorio.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/template/admin-conta/admin-conta.component.css","webpack:///./src/app/template/admin-conta/admin-conta.component.html","webpack:///./src/app/template/admin-conta/admin-conta.component.ts","webpack:///./src/app/template/admin/admin.component.css","webpack:///./src/app/template/admin/admin.component.html","webpack:///./src/app/template/admin/admin.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ApiService {\n\n    private baseUrl: String = 'http://gestaopessoal.upinsoft.tech/api/';\n    private token: String = localStorage.getItem('token') || '';\n    private headers: any = {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.token\n    };\n\n    constructor(private http: HttpClient) {\n    }\n\n    public login(url: String, data: Array<any>): Observable<any> {\n        return this.http.post(`${this.baseUrl}${url}`, data);\n    }\n\n    public regiter(url: String, data: Array<any>): Observable<any> {\n        return this.http.post(`${this.baseUrl}${url}`, data);\n    }\n\n    public get(url: String, param: any): Observable<any> {\n        let request;\n        if (param != null) {\n            request = this.http.get(`${this.baseUrl}${url}`, {params: param, headers: this.headers});\n        } else {\n            request = this.http.get(`${this.baseUrl}${url}`, {headers: this.headers});\n        }\n\n        return request;\n    }\n\n    public post(url: String, data: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}${url}`, data, {headers: this.headers});\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {DashboardComponent} from './resumo/dashboard/dashboard.component';\nimport {CategoriasListarComponent} from './categorias/categorias-listar/categorias-listar.component';\nimport {LoginComponent} from './conta/login/login.component';\nimport {LancamentosListarComponent} from './lancamentos/lancamentos-listar/lancamentos-listar.component';\nimport {RelatorioComponent} from './resumo/relatorio/relatorio.component';\nimport {CategoriasCadastroComponent} from './categorias/categorias-cadastro/categorias-cadastro.component';\nimport {LancamentosCadastroComponent} from './lancamentos/lancamentos-cadastro/lancamentos-cadastro.component';\nimport {CadastroComponent} from './conta/cadastro/cadastro.component';\n\nconst routes: Routes = [\n    {path: '', component: DashboardComponent},\n    {path: 'dashboard', component: DashboardComponent},\n\n    {path: 'categorias', component: CategoriasListarComponent},\n    {path: 'categorias/cadastro', component: CategoriasCadastroComponent},\n\n    {path: 'lancamentos', component: LancamentosListarComponent},\n    {path: 'lancamentos/cadastro', component: LancamentosCadastroComponent},\n\n    {path: 'relatorios', component: RelatorioComponent},\n\n    {path: 'conta/login', component: LoginComponent},\n    {path: 'conta/cadastro', component: CadastroComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gestao-pessoal';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\n\nimport {AdminComponent} from './template/admin/admin.component';\nimport {AdminContaComponent} from './template/admin-conta/admin-conta.component';\nimport {CategoriasListarComponent} from './categorias/categorias-listar/categorias-listar.component';\nimport {CategoriasCadastroComponent} from './categorias/categorias-cadastro/categorias-cadastro.component';\nimport {DashboardComponent} from './resumo/dashboard/dashboard.component';\nimport {LancamentosListarComponent} from './lancamentos/lancamentos-listar/lancamentos-listar.component';\nimport {LancamentosCadastroComponent} from './lancamentos/lancamentos-cadastro/lancamentos-cadastro.component';\nimport {RelatorioComponent} from './resumo/relatorio/relatorio.component';\nimport {LoginComponent} from './conta/login/login.component';\nimport {CadastroComponent} from './conta/cadastro/cadastro.component';\nimport {AuthService} from './services/auth.service';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AdminComponent,\n        AdminContaComponent,\n        CategoriasListarComponent,\n        CategoriasCadastroComponent,\n        DashboardComponent,\n        LancamentosListarComponent,\n        LancamentosCadastroComponent,\n        RelatorioComponent,\n        LoginComponent,\n        CadastroComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule\n    ],\n    providers: [\n        AuthService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpYXMvY2F0ZWdvcmlhcy1jYWRhc3Ryby9jYXRlZ29yaWFzLWNhZGFzdHJvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-admin titulo=\\\"Categorias\\\">\\n    <form name=\\\"form-categoria\\\" (ngSubmit)=\\\"handleCadastro()\\\" #formCadastro=\\\"ngForm\\\" method=\\\"post\\\">\\n        <input type=\\\"hidden\\\" name=\\\"Id\\\" id=\\\"Id\\\" [(ngModel)]=\\\"categoria.id\\\"/>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\"\\n                     [ngClass]=\\\"{'invalid': !nome.valid && (nome.dirty || nome.touched)}\\\">\\n                    <label>Nome <span class=\\\"text-danger\\\">*</span></label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Nome\\\" id=\\\"Nome\\\" required [(ngModel)]=\\\"categoria.nome\\\"\\n                           #nome=\\\"ngModel\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Descrição </label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"Descricao\\\" id=\\\"Descricao\\\"\\n                              [(ngModel)]=\\\"categoria.descricao\\\"></textarea>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <a href=\\\"categorias\\\" class=\\\"btn btn-secondary btn-sn\\\">\\n                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i> Voltar\\n                </a>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sn float-right\\\" [disabled]=\\\"!formCadastro.valid\\\">\\n                    <i class=\\\"fa fa-save mr-2\\\"></i> Salvar\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n</app-admin>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\n\n@Component({\n    selector: 'app-categorias-cadastro',\n    templateUrl: './categorias-cadastro.component.html',\n    styleUrls: ['./categorias-cadastro.component.css']\n})\nexport class CategoriasCadastroComponent implements OnInit {\n\n    categoria: any = {\n        id: '',\n        nome: '',\n        descricao: ''\n    };\n\n    constructor(private api: ApiService) {\n    }\n\n    ngOnInit() {\n    }\n\n    handleCadastro() {\n        this.api.post('categorias', this.categoria).subscribe(res => {\n            console.log(res);\n        }, err => {\n            console.log(err);\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpYXMvY2F0ZWdvcmlhcy1saXN0YXIvY2F0ZWdvcmlhcy1saXN0YXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-admin titulo=\\\"Categorias\\\">\\n\\n    <a href=\\\"categorias/cadastro\\\" class=\\\"btn btn-primary mb-3\\\">\\n        <i class=\\\"fa fa-plus mr-2\\\"></i> Adicionar\\n    </a>\\n\\n    <table class=\\\"table table-striped\\\">\\n        <thead>\\n        <tr>\\n            <th>#</th>\\n            <th>Nome</th>\\n            <th>Descrição</th>\\n            <th></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let categoria of categorias; index as i\\\">\\n            <td>{{ (i + 1) }}</td>\\n            <td>{{categoria.nome}}</td>\\n            <td>{{categoria.descricao}}</td>\\n            <td>\\n                <a href=\\\"\\\" class=\\\"btn btn-info btn-sm\\\">\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\n                </a>\\n\\n                <a href=\\\"\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                </a>\\n            </td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n</app-admin>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\n\n@Component({\n    selector: 'app-categorias-listar',\n    templateUrl: './categorias-listar.component.html',\n    styleUrls: ['./categorias-listar.component.css']\n})\nexport class CategoriasListarComponent implements OnInit {\n\n    categorias: Array<any> = [];\n\n    constructor(private api: ApiService) {\n    }\n\n    ngOnInit() {\n        this.api.get('categorias', {})\n            .subscribe(res => this.categorias = res.body);\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-admin-conta>\\n\\n    <div class=\\\"container\\\">\\n        <div class=\\\"login mt-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6 offset-3\\\">\\n                    <div class=\\\"card pt-4 pb-4\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <form name=\\\"form-login\\\" (ngSubmit)=\\\"handleCadastro()\\\" #formCadastro=\\\"ngForm\\\" method=\\\"post\\\">\\n                                <div class=\\\"form-group\\\"\\n                                     [ngClass]=\\\"{'invalid': !nome.valid && (nome.dirty || nome.touched)}\\\">\\n                                    <label>Nome <span class=\\\"text-danger\\\">*</span></label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Nome\\\" id=\\\"Nome\\\"\\n                                           [(ngModel)]=\\\"usuario.name\\\" #nome=\\\"ngModel\\\"/>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\"\\n                                     [ngClass]=\\\"{'invalid': !email.valid && (email.dirty || email.touched)}\\\">\\n                                    <label>E-mail <span class=\\\"text-danger\\\">*</span></label>\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" id=\\\"Email\\\"\\n                                           [(ngModel)]=\\\"usuario.email\\\" #email=\\\"ngModel\\\"/>\\n                                </div>\\n\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\"\\n                                             [ngClass]=\\\"{'invalid': !senha.valid && (senha.dirty || senha.touched)}\\\">\\n                                            <label>Senha <span class=\\\"text-danger\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Senha\\\" id=\\\"Senha\\\"\\n                                                   [(ngModel)]=\\\"usuario.password\\\"\\n                                                   #senha=\\\"ngModel\\\"/>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\"\\n                                             [ngClass]=\\\"{'invalid': !consfirmaSenha.valid && (consfirmaSenha.dirty || consfirmaSenha.touched)}\\\">\\n                                            <label>Confirma Senha <span class=\\\"text-danger\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ConsfirmaSenha\\\"\\n                                                   [(ngModel)]=\\\"usuario.confirmPassword\\\"\\n                                                   id=\\\"ConsfirmaSenha\\\" #consfirmaSenha=\\\"ngModel\\\"/>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"\\n                                        [disabled]=\\\"!formCadastro.valid\\\">\\n                                    Efetuar Cadastro\\n                                </button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</app-admin-conta>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-cadastro',\n    templateUrl: './cadastro.component.html',\n    styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n    usuario: any = {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    };\n\n    constructor(private api: ApiService, private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    handleCadastro() {\n        if (this.usuario.password !== this.usuario.confirmPassword) {\n            alert('As senhas não conferem.');\n        } else {\n            this.api.regiter('tenants', this.usuario).subscribe(res => {\n                alert(res.mensagem);\n                this.router.navigate(['/conta/login']);\n            }, error => {\n                console.log(error);\n            });\n        }\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-admin-conta>\\n\\n    <div class=\\\"container\\\">\\n        <div class=\\\"login mt-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-8 offset-2\\\">\\n                    <div class=\\\"card pt-4 pb-4\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6 border-right\\\"></div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <form name=\\\"form-login\\\" (ngSubmit)=\\\"handleLogin()\\\" #formLogin=\\\"ngForm\\\" method=\\\"post\\\">\\n                                        <div class=\\\"form-group\\\"\\n                                             [ngClass]=\\\"{'invalid': !nome.valid && (nome.dirty || nome.touched)}\\\">\\n                                            <label>Login <span class=\\\"text-danger\\\">*</span></label>\\n                                            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\"\\n                                                   required\\n                                                   [(ngModel)]=\\\"usuario.email\\\" #nome=\\\"ngModel\\\"/>\\n                                        </div>\\n\\n                                        <div class=\\\"form-group\\\"\\n                                             [ngClass]=\\\"{'invalid': !senha.valid && (senha.dirty || senha.touched)}\\\">\\n                                            <label>Senha <span class=\\\"text-danger\\\">*</span></label>\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\" required\\n                                                   [(ngModel)]=\\\"usuario.password\\\" #senha=\\\"ngModel\\\"/>\\n                                        </div>\\n\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!formLogin.valid\\\">\\n                                            Login\\n                                        </button>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</app-admin-conta>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    usuario: any = {\n        email: '',\n        password: ''\n    };\n\n    constructor(private api: ApiService, private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    handleLogin() {\n        this.api.login('login', this.usuario).subscribe(res => {\n            localStorage.setItem('logged', res.body.user);\n            localStorage.setItem('token', res.body.token);\n\n            this.router.navigate(['/dashboard']);\n        }, err => {\n            alert(err.mensagem);\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xhbmNhbWVudG9zL2xhbmNhbWVudG9zLWNhZGFzdHJvL2xhbmNhbWVudG9zLWNhZGFzdHJvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-admin titulo=\\\"Lançamentos\\\">\\n    <form name=\\\"form-categoria\\\" (ngSubmit)=\\\"handleCadastro()\\\" #formCadastro=\\\"ngForm\\\" method=\\\"post\\\">\\n        <input type=\\\"hidden\\\" name=\\\"Id\\\" id=\\\"Id\\\"/>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Tipo Lançamento <span class=\\\"text-danger\\\">*</span></label>\\n                    <select class=\\\"form-control\\\" name=\\\"tipo_lancamento\\\" id=\\\"tipo_lancamento\\\" [(ngModel)]=\\\"lancamento.tipo_lancamento\\\">\\n                        <option value=\\\"\\\">- Selecione -</option>\\n                        <option value=\\\"1\\\">Receita</option>\\n                        <option value=\\\"2\\\">Despesa</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-8\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'invalid': !descricao.valid && (descricao.dirty || descricao.touched)}\\\">\\n                    <label>Descrição <span class=\\\"text-danger\\\">*</span></label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descricao\\\" id=\\\"descricao\\\" [(ngModel)]=\\\"lancamento.descricao\\\" #descricao=\\\"ngModel\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Valor <span class=\\\"text-danger\\\">*</span></label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"valor\\\" id=\\\"valor\\\" [(ngModel)]=\\\"lancamento.valor\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Data Vencimento <span class=\\\"text-danger\\\">*</span></label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"data\\\" id=\\\"data\\\" [(ngModel)]=\\\"lancamento.data\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Categoria <span class=\\\"text-danger\\\">*</span></label>\\n                    <select class=\\\"form-control\\\" name=\\\"categoria_id\\\" id=\\\"categoria_id\\\" [(ngModel)]=\\\"lancamento.categoria_id\\\">\\n                        <option value=\\\"\\\">- Selecione -</option>\\n                        <option *ngFor=\\\"let categoria of categorias\\\" [value]=\\\"categoria.id\\\">{{categoria.nome}}</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Situação <span class=\\\"text-danger\\\">*</span></label>\\n                    <select class=\\\"form-control\\\" name=\\\"situacao\\\" id=\\\"situacao\\\" [(ngModel)]=\\\"lancamento.situacao\\\">\\n                        <option value=\\\"2\\\">Aguardando Pagamento</option>\\n                        <option value=\\\"1\\\">Recebido</option>\\n                        <option value=\\\"3\\\">Pago</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Total de Parcelas <span class=\\\"text-danger\\\">*</span></label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"total_parcelas\\\" id=\\\"total_parcelas\\\" [(ngModel)]=\\\"lancamento.total_parcela\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <a href=\\\"lancamentos\\\" class=\\\"btn btn-secondary btn-sn\\\">\\n                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i> Voltar\\n                </a>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sn float-right\\\" [disabled]=\\\"!formCadastro.valid\\\">\\n                    <i class=\\\"fa fa-save mr-2\\\"></i> Salvar\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n</app-admin>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\n\n@Component({\n    selector: 'app-lancamentos-cadastro',\n    templateUrl: './lancamentos-cadastro.component.html',\n    styleUrls: ['./lancamentos-cadastro.component.css']\n})\nexport class LancamentosCadastroComponent implements OnInit {\n\n    lancamento: any = {\n        descricao: '',\n        valor: '',\n        data: '',\n        categoria_id: '',\n        tipo_lancamento: '',\n        total_parcela: '',\n        situacao: ''\n    };\n\n    categorias: any = [];\n\n    constructor(private api: ApiService) {\n    }\n\n    ngOnInit() {\n        this.api.get('categorias', {})\n            .subscribe(res => this.categorias = res.body);\n    }\n\n    handleCadastro() {\n        this.api.post('lancamentoContas', this.lancamento).subscribe(res => {\n            console.log(res);\n        }, err => {\n            console.log(err);\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xhbmNhbWVudG9zL2xhbmNhbWVudG9zLWxpc3Rhci9sYW5jYW1lbnRvcy1saXN0YXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-admin titulo=\\\"Lançamento de Contas\\\">\\n\\n    <a href=\\\"lancamentos/cadastro\\\" class=\\\"btn btn-primary mb-3\\\">\\n        <i class=\\\"fa fa-plus mr-2\\\"></i> Adicionar\\n    </a>\\n\\n    <table class=\\\"table table-striped\\\">\\n        <thead>\\n        <tr>\\n            <th>#</th>\\n            <th>Categoria</th>\\n            <th>Descrição</th>\\n            <th>Valor</th>\\n            <th>Data Vencimento</th>\\n            <th>Parcela</th>\\n            <th>Situação</th>\\n            <th>Tipo</th>\\n            <th></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let lancamento of lancamentos; index as i\\\">\\n            <td>{{ (i + 1) }}</td>\\n            <td>{{lancamento.categoria.nome}}</td>\\n            <td>{{lancamento.descricao}}</td>\\n            <td>{{lancamento.valor | currency:'BRL':true}}</td>\\n            <td>{{lancamento.data | date :'dd/MM/yyyy'}}</td>\\n            <td>{{lancamento.parcela + '/' + lancamento.total_parcela }}</td>\\n            <td>{{ lancamento.situacao }}</td>\\n            <td>{{ lancamento.tipo_lancamento == 1 ? 'Receita' : 'Despesa' }}</td>\\n            <td>\\n                <a href=\\\"\\\" class=\\\"btn btn-info btn-sm\\\">\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\n                </a>\\n\\n                <a href=\\\"\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                </a>\\n            </td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n</app-admin>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from '../../api.service';\n\n@Component({\n    selector: 'app-lancamentos-listar',\n    templateUrl: './lancamentos-listar.component.html',\n    styleUrls: ['./lancamentos-listar.component.css']\n})\nexport class LancamentosListarComponent implements OnInit {\n\n    lancamentos: any = [];\n\n    constructor(private  api: ApiService) {\n    }\n\n    ngOnInit() {\n        this.api.get('lancamentoContas', {data_inicio: '2019-02-01', data_fim: '2019-02-28'})\n            .subscribe(res => {\n                console.log(res);\n                this.lancamentos = res.body;\n            });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3Vtby9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-admin>\\n\\n</app-admin>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3Vtby9yZWxhdG9yaW8vcmVsYXRvcmlvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  relatorio works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-relatorio',\n  templateUrl: './relatorio.component.html',\n  styleUrls: ['./relatorio.component.css']\n})\nexport class RelatorioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL2FkbWluLWNvbnRhL2FkbWluLWNvbnRhLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<ng-content></ng-content>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-conta',\n  templateUrl: './admin-conta.component.html',\n  styleUrls: ['./admin-conta.component.css']\n})\nexport class AdminContaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n            aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\">Thiago Rodrigues</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n    <nav class=\\\"nav nav-pills nav-fill mt-5\\\">\\n        <a class=\\\"nav-item nav-link bg-dark text-white pt-3 pb-3\\\" href=\\\"dashboard\\\">Dashboard</a>\\n        <a class=\\\"nav-item nav-link bg-primary text-white pt-3 pb-3\\\" href=\\\"categorias\\\">Categorias</a>\\n        <a class=\\\"nav-item nav-link bg-warning text-white pt-3 pb-3\\\" href=\\\"lancamentos\\\">Lançamentos</a>\\n        <a class=\\\"nav-item nav-link bg-info text-white pt-3 pb-3\\\" href=\\\"relatorio\\\">Relatórios</a>\\n    </nav>\\n\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <h3 class=\\\"card-title\\\">{{ titulo }}</h3>\\n            <ng-content></ng-content>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-admin',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.css']\n})\n\nexport class AdminComponent implements OnInit {\n\n    @Input()\n    titulo: String = \"Nome\";\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}